read one scalar from
one scalar from text
scalar from text file
void rdT x inFile
rdT x inFile >
read scalars from text
scalars from text file
void rdT x Ts
rdT x Ts xs
x Ts xs inFile
Ts xs inFile >
xs inFile > x
void rdhelpstdvector < v
rdhelpstdvector < v T
< v T elt
v T elt inFile
T elt inFile >
elt inFile > elt
void rdhelpstdvector < v
rdhelpstdvector < v stdvector
< v stdvector <
T elt inFile >
elt inFile > elt
inFile > elt vpushbackelt
read vectors from text
void rdint const N
rdint const N stdvector
const N stdvector <
N stdvector < v
stdvector < v stdvector
< v stdvector <
for int i0 iN
int i0 iN i
i0 iN i rdhelpv
void prhelp stdcout <
void prhelpconst T x
prhelpconst T x const
T x const Ts
x const Ts xs
const Ts xs stdcout
Ts xs stdcout <
void pr stdcout <
print scalars separated by
scalars separated by spaces
separated by spaces followed
by spaces followed by
spaces followed by a
void prconst T x
prconst T x const
T x const Ts
x const Ts xs
const Ts xs stdcout
Ts xs stdcout <
xs stdcout < x
for int i0 iintvsize
int i0 iintvsize i
if i0 stdcout <
for auto itsbegin itsend
auto itsbegin itsend +
if itsbegin stdcout <
for auto itmbegin itmend
auto itmbegin itmend +
stdcout < itfirst <
Has effect of m
effect of m =
const T mxeqT m
T mxeqT m const
mxeqT m const T
m const T v
const T v m
T v m =
v m = stdmaxmv
m = stdmaxmv return
Has effect of m
effect of m =
const T mneqT m
T mneqT m const
mneqT m const T
m const T v
const T v m
T v m =
v m = stdminmv
m = stdminmv return
mainint argc char const
make sure filename is
if argc = 2
argc = 2 prExpected
= 2 prExpected one
2 prExpected one argument
open input file and
input file and get
file and get number
and get number of
int T inFileopenargv1 rdT
for int caseIndex1 caseIndexT
int caseIndex1 caseIndexT caseIndex
